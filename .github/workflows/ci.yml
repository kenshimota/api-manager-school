name: API MANAGER SCHOOL

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - feature/ci

jobs:
  container-job:
    runs-on: ubuntu-latest
    environment: ci-test

    env:
      DATABASE_NAME_CI: manager-school-ci
      DATABASE_USERNAME_CI: user
      DATABASE_PASSWORD_CI: manager
      DATABASE_HOSTNAME_CI: postgres

    services:
      postgres:
        image: postgres:14-alpine3.17

        # environment database
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: manager
          POSTGRES_DB: manager-school-ci

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@ec02537da5712d66d4d50a0f33b7eb52773b5ed1
        with:
          ruby-version: '3.0.2'
      - name: install dependencies
        run: |
          bundle install
      - name: execute migrations and seed
        run: |
          rails db:drop RAILS_ENV=ci SECRET_KEY_BASE=production_test_key |
          rails db:create RAILS_ENV=ci SECRET_KEY_BASE=production_test_key |
          rails db:migrate RAILS_ENV=ci SECRET_KEY_BASE=production_test_key |
          rails db:seed RAILS_ENV=ci SECRET_KEY_BASE=production_test_key